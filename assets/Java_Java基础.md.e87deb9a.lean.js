import{_ as e,o,c as r,x as s,a as n,C as l,z as t,Q as p,D as c}from"./chunks/framework.d6bf9272.js";const i="/myblog/images/字节.png",y="/myblog/images/ASCII编码表.png",C="/myblog/images/声音存储.png",D="/myblog/images/十进制转二进制.png",A="/myblog/images/自动类型转换原理.png",d="/myblog/images/自动类型转换.png",F="/myblog/images/强制类型转换原理.png",Ns=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Java/Java基础.md","lastUpdated":1719937664000}'),u={name:"Java/Java基础.md"},b=p("",7),_=s("thead",null,[s("tr",null,[s("th",null,"常用数据"),s("th",null,"生活中的写法"),s("th",{style:{"text-align":"center"}},"程序中的写法"),s("th",null,"说明")])],-1),h=s("tr",null,[s("td",null,"整数"),s("td",null,"666，-88"),s("td",{style:{"text-align":"center"}},"666，-88"),s("td",null,"写法一致")],-1),m=s("tr",null,[s("td",null,"小数"),s("td",null,"13.14，-5.21"),s("td",{style:{"text-align":"center"}},"13.14，-5.21"),s("td",null,"写法一致")],-1),g=s("td",null,"字符",-1),f=s("td",null,"A，0，我",-1),x=s("td",{style:{"text-align":"center"}},"‘A’，‘0’，‘我’",-1),E=s("td",null,"字符串",-1),v=s("td",null,"黑马程序员",-1),q=s("td",{style:{"text-align":"center"}},"“HelloWorld”，“黑马程序员”",-1),T=s("tr",null,[s("td",null,"布尔值"),s("td",null,"真、假"),s("td",{style:{"text-align":"center"}},"true 、false"),s("td",null,[n("只有两个值："),s("br"),n("true：代表真，false：代表假")])],-1),S=s("tr",null,[s("td",null,"空值"),s("td"),s("td",{style:{"text-align":"center"}},"值是：null"),s("td",null,"一个特殊的值，空值")],-1),k=p("",43),P={align:"center"},j=s("tr",null,[s("th",{style:{"text-align":"center"},colspan:"2"},"数据类型"),s("th",{style:{"text-align":"center"}},"内存占用(字节数)"),s("th",{style:{"text-align":"center"}},"数据范围")],-1),w=s("tr",null,[s("td",{rowspan:"4"},"整型"),s("td",null,"byte"),s("td",null,"1"),s("td",null,"-128~127")],-1),I=s("tr",null,[s("td",null,"short"),s("td",null,"2"),s("td",null,"-32768~32767")],-1),B=s("td",null,"4",-1),V=s("td",null,"-2147483648~2147483647（10位数，大概21亿多）",-1),N=s("tr",null,[s("td",null,"long"),s("td",null,"8"),s("td",null,"-9223372036854775808 ~ 9223372036854775807（19位数）")],-1),J=s("tr",null,[s("td",{rowspan:"2"},"浮点型（小数）"),s("td",null,"float"),s("td",null,"4"),s("td",null,"1.401298 E -45 到 3.4028235 E +38")],-1),R=s("td",null,"8",-1),$=s("td",null,"4.9000000 E -324 到1.797693 E +308",-1),G=s("tr",null,[s("td",null,"字符型"),s("td",null,"char"),s("td",null,"2"),s("td",null,"0-65535")],-1),K=s("tr",null,[s("td",null,"布尔型"),s("td",null,"boolean"),s("td",null,"1"),s("td",null,"true，false")],-1),M=p("",1),z={id:"_2、自动类型转换-小范围类型变量-➡-大范围类型变量",tabindex:"-1"},L=s("a",{class:"header-anchor",href:"#_2、自动类型转换-小范围类型变量-➡-大范围类型变量","aria-label":'Permalink to "2、自动类型转换（<font color="red">小范围类型变量 ➡ 大范围类型变量</font>）"'},"​",-1),H=p("",8),O=s("p",null,[n("⚠️ "),s("strong",null,"注意事项：")],-1),Q=p("",1),U={id:"_3、强制类型转换-大范围类型变量-➡-小范围类型变量",tabindex:"-1"},W=s("a",{class:"header-anchor",href:"#_3、强制类型转换-大范围类型变量-➡-小范围类型变量","aria-label":'Permalink to "3、强制类型转换（<font color="red">大范围类型变量 ➡ 小范围类型变量</font>）"'},"​",-1),X=p("",7),Y=s("p",null,[n("⚠️ ​"),s("strong",null,"注意事项：")],-1),Z=s("strong",null,"可能",-1),ss=p("",5),ns=s("p",null,"⚠️ 注：",-1),as=s("p",null,"“+”符号与字符串运算的时候是用作连接符的，其结果依然是一个字符串",-1),ls=s("p",null,"能算则算，不能算就拼接在一起",-1),ts=p("",3),ps=s("p",null,"⚠️ 注：",-1),es=s("li",null,[s("p",null,"++ 、-- 只能操作变量，不能操作字面量")],-1),os=s("li",null,[s("p",null,"如果单独使用放前放后是没有区别的")],-1),rs=s("strong",null,"先",-1),cs=s("strong",null,"自增/自减",-1),is=s("strong",null,"再使用变量",-1),ys=s("strong",null,"先使用",-1),Cs=s("strong",null,"再",-1),Ds=s("strong",null,"自增/自减",-1),As=p("",3),ds=p("",7),Fs=s("thead",null,[s("tr",null,[s("th",null,"符号"),s("th",null,"名称"),s("th",null,"用法"),s("th",{style:{"text-align":"center"}},"运算逻辑")])],-1),us=s("tr",null,[s("td",null,"&"),s("td",null,"逻辑与"),s("td",null,"2 > 1 & 3 > 2"),s("td",{style:{"text-align":"center"}},[n("多个条件必须都是 true，结果才是true"),s("br"),n("有一个是false，结果就是 false")])],-1),bs=s("tr",null,[s("td",null,"|"),s("td",null,"逻辑或"),s("td",null,"2 > 1 | 3 < 5"),s("td",{style:{"text-align":"center"}},"多个条件中只要有一个是 true，结果就是 true")],-1),_s=s("tr",null,[s("td",null,"!"),s("td",null,"逻辑非"),s("td",null,"! (2 > 1)"),s("td",{style:{"text-align":"center"}},"取反：!true == false、!false == true")],-1),hs=s("tr",null,[s("td",null,"^"),s("td",null,"逻辑异或"),s("td",null,"2 > 1 ^ 3 > 1"),s("td",{style:{"text-align":"center"}},[n("前后条件的结果相同，就直接返回 false"),s("br"),n("前后条件的结果不同，才返回 true")])],-1),ms=s("td",null,"&&",-1),gs=s("td",null,"短路与",-1),fs=s("td",null,"2 > 10 && 3 > 2",-1),xs={style:{"text-align":"center"}},Es=s("td",null,"||",-1),vs=s("td",null,"短路或",-1),qs=s("td",null,"2 > 1 | | 3 < 5",-1),Ts={style:{"text-align":"center"}};function Ss(ks,Ps,js,ws,Is,Bs){const a=c("font");return o(),r("div",null,[b,s("table",null,[_,s("tbody",null,[h,m,s("tr",null,[g,f,x,s("td",null,[n("程序中必须使用"),l(a,{color:"red"},{default:t(()=>[n("单引号")]),_:1}),n("，有且仅能一个字符")])]),s("tr",null,[E,v,q,s("td",null,[n("程序中必须使用"),l(a,{color:"red"},{default:t(()=>[n("双引号")]),_:1}),n("，内容可有可无")])]),T,S])]),k,s("table",null,[s("tbody",P,[j,w,I,s("tr",null,[s("td",null,[n("int"),l(a,{color:"red"},{default:t(()=>[n("（默认）")]),_:1})]),B,V]),N,J,s("tr",null,[s("td",null,[n("double"),l(a,{color:"red"},{default:t(()=>[n("（默认）")]),_:1})]),R,$]),G,K])]),M,s("h3",z,[n("2、自动类型转换（"),l(a,{color:"red"},{default:t(()=>[n("小范围类型变量 ➡ 大范围类型变量")]),_:1}),n("） "),L]),H,s("blockquote",null,[O,s("ul",null,[s("li",null,[n("表达式的最终结果类型由表达式中的"),l(a,{color:"red"},{default:t(()=>[n("最高类型")]),_:1}),n("决定")]),s("li",null,[n("在表达式中，"),l(a,{color:"red"},{default:t(()=>[n("byte、short、char")]),_:1}),n(" 是直接转换成 "),l(a,{color:"red"},{default:t(()=>[n("int")]),_:1}),n(" 类型参与运算")])])]),Q,s("h3",U,[n("3、强制类型转换（"),l(a,{color:"red"},{default:t(()=>[n("大范围类型变量 ➡ 小范围类型变量")]),_:1}),n("） "),W]),X,s("blockquote",null,[Y,s("ul",null,[s("li",null,[n("强制类型转换"),l(a,{color:"red"},{default:t(()=>[Z,n("造成数据（丢失）溢出")]),_:1})]),s("li",null,[n("浮点型强转成整型，"),l(a,{color:"red"},{default:t(()=>[n("直接丢掉小数部分，保留整数部分返回")]),_:1})])])]),ss,s("blockquote",null,[ns,s("p",null,[n("“+”符号除了用于加法运算，还可以作为"),l(a,{color:"red"},{default:t(()=>[n("连接符")]),_:1})]),as,ls]),ts,s("blockquote",null,[ps,s("ul",null,[es,os,s("li",null,[s("p",null,[n("非单独使用（"),l(a,{color:"red"},{default:t(()=>[n("如在表达式中、或者同时有其它操作")]),_:1}),n("）")]),s("ul",null,[s("li",null,[s("p",null,[n("在变量"),l(a,{color:"red"},{default:t(()=>[n("前")]),_:1}),n("，"),rs,n("进行变量"),cs,n("，"),is])]),s("li",null,[s("p",null,[n("在变量"),l(a,{color:"red"},{default:t(()=>[n("后")]),_:1}),n("，"),ys,n("变量，"),Cs,n("进行变量"),Ds])])])])])]),As,s("blockquote",null,[s("p",null,[n("⚠️ 注："),l(a,{color:"red"},{default:t(()=>[n("扩展的赋值运算符隐含了强制类型转换")]),_:1})])]),ds,s("table",null,[Fs,s("tbody",null,[us,bs,_s,hs,s("tr",null,[ms,gs,fs,s("td",xs,[n("判断结果与“&”一样，过程不同："),l(a,{color:"red"},{default:t(()=>[n("左边为 false")]),_:1}),n("，右边则不执行")])]),s("tr",null,[Es,vs,qs,s("td",Ts,[n("判断结果与“|”一样，过程不同："),l(a,{color:"red"},{default:t(()=>[n("左边为 true")]),_:1}),n("， 右边则不执行")])])])])])}const Js=e(u,[["render",Ss]]);export{Ns as __pageData,Js as default};
