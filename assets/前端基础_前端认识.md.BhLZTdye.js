import{_ as a,c as e,o as l,a3 as i,b7 as r}from"./chunks/framework.CX7ZiWGr.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端基础/前端认识.md","filePath":"前端基础/前端认识.md","lastUpdated":1686243491000}'),o={name:"前端基础/前端认识.md"},t=i('<h2 id="前端的理解" tabindex="-1">前端的理解 <a class="header-anchor" href="#前端的理解" aria-label="Permalink to &quot;前端的理解&quot;">​</a></h2><h3 id="_1、什么是前端" tabindex="-1">1、什么是前端 <a class="header-anchor" href="#_1、什么是前端" aria-label="Permalink to &quot;1、什么是前端&quot;">​</a></h3><p>只要是用户看得到的界面。包括移动端（app 、微信小程序）、pc（网站）、tv 、车载、巨屏 都是属于前端。</p><p>而我们要做的就是将这些页面给写出来，展示出来。而前端近几年也越来越火，原因也是因为前端技术已经不光光只是运用在 PC 端、APP 端了，并且随着 5G 的发展，像智能家居，智慧城市等一系列东西对前端需要量也在逐渐扩大。</p><p>在很多地方，又把我们前端技术称之为 <code>web前端</code> 或者 <code>web应用</code> 。</p><h3 id="_2、web-是什么" tabindex="-1">2、web 是什么 <a class="header-anchor" href="#_2、web-是什么" aria-label="Permalink to &quot;2、web 是什么&quot;">​</a></h3><p>本意就是蜘蛛网，说白了其实就是浏览器中的网页而已。</p><h3 id="_3、web-应用" tabindex="-1">3、web 应用 <a class="header-anchor" href="#_3、web-应用" aria-label="Permalink to &quot;3、web 应用&quot;">​</a></h3><p>网页中打开的网站，比如京东、淘宝这些网站，而要打开网页，前提是需要打开浏览器，所以我们的网页是运行在浏览器中的，而像这种需要用浏览器打开网页的形式在很多地方又称作为 <code>B/S架构</code> ，那什么又是 B/S 架构呢？</p><h2 id="计算机的组成" tabindex="-1">计算机的组成 <a class="header-anchor" href="#计算机的组成" aria-label="Permalink to &quot;计算机的组成&quot;">​</a></h2><ul><li><p>软件</p><ul><li>应用程序：微信、QQ、谷歌浏览器等</li><li>操作系统：Windows、Linux、Android、HarmonyOS、IOS 等</li></ul></li><li><p>硬件</p><ul><li><p>控制器：协调和指挥计算机中各个部件进行按需作业，控制器和运算器共同组成了<strong>中央处理器（CPU）</strong>。</p></li><li><p>运算器：算术与逻辑运算的处理</p></li><li><p>存储器单元：主要分为内存和外存，磁盘光驱等都是外存</p></li><li><p>输入设备：比如鼠标、键盘等</p></li><li><p>输出设备：比如显示器、音箱等</p></li></ul></li></ul><h2 id="web-架构" tabindex="-1">web 架构 <a class="header-anchor" href="#web-架构" aria-label="Permalink to &quot;web 架构&quot;">​</a></h2><h3 id="_1、两层架构" tabindex="-1">1、两层架构 <a class="header-anchor" href="#_1、两层架构" aria-label="Permalink to &quot;1、两层架构&quot;">​</a></h3><h4 id="_1-、b-s-架构" tabindex="-1">1）、B/S 架构 <a class="header-anchor" href="#_1-、b-s-架构" aria-label="Permalink to &quot;1）、B/S 架构&quot;">​</a></h4><p><code>browser/server （浏览器/服务器）</code></p><p>📔 特点：</p><ul><li><p>方便，不用安装，打开的永远是最新版的</p></li><li><p>跨平台（不同的设备：显示器、手机、ipad）</p></li></ul><h4 id="_2-、c-s-架构" tabindex="-1">2）、C/S 架构 <a class="header-anchor" href="#_2-、c-s-架构" aria-label="Permalink to &quot;2）、C/S 架构&quot;">​</a></h4><p><code>client/server （客户端/服务器）</code></p><p>📔 特点：</p><ul><li>需要下载、手动更新</li><li>速度快</li></ul><h3 id="_2、三层架构" tabindex="-1">2、三层架构 <a class="header-anchor" href="#_2、三层架构" aria-label="Permalink to &quot;2、三层架构&quot;">​</a></h3><p>这里面提三层架构的目的是让学生知道有个中间层，在三阶段介绍 node 的时候，就可以说很多的中间层就是 node 、php 做的。</p><h4 id="_1-、产生的原因" tabindex="-1">1）、产生的原因 <a class="header-anchor" href="#_1-、产生的原因" aria-label="Permalink to &quot;1）、产生的原因&quot;">​</a></h4><p>现在的项目越来越大，如果所有的处理都放在一个服务器上的话，速度就会越来越慢，并且安全性也得不到保障。</p><h4 id="_2-、b-s-s-架构" tabindex="-1">2）、B/S/S 架构 <a class="header-anchor" href="#_2-、b-s-s-架构" aria-label="Permalink to &quot;2）、B/S/S 架构&quot;">​</a></h4><p><code>browser/server/server （浏览器/服务器/服务器）</code></p><p>📔 特点：</p><ul><li>比层架构多了一层中间一层服务器</li><li>第一个 server ：只做业务逻辑的处理</li><li>第二个 server ：只对数据进行处理</li></ul><h4 id="_3-、c-s-s-架构" tabindex="-1">3）、C/S/S 架构 <a class="header-anchor" href="#_3-、c-s-s-架构" aria-label="Permalink to &quot;3）、C/S/S 架构&quot;">​</a></h4><p><code>client/server/server （客户端/服务器/服务器）</code></p><p>📔 特点：</p><ul><li><p>比层架构多了一层中间一层服务器</p></li><li><p>第一个 server ：只做业务逻辑的处理</p></li><li><p>第二个 server ：只对数据进行处理</p></li></ul><p><img src="'+r+'" alt="前后端分离部署服务器"></p><h2 id="软件开发流程" tabindex="-1">软件开发流程 <a class="header-anchor" href="#软件开发流程" aria-label="Permalink to &quot;软件开发流程&quot;">​</a></h2><h3 id="_1、需求分析-明白要做什么" tabindex="-1">1、需求分析 - 明白要做什么？ <a class="header-anchor" href="#_1、需求分析-明白要做什么" aria-label="Permalink to &quot;1、需求分析 - 明白要做什么？&quot;">​</a></h3><p>职位：产品经理</p><h3 id="_2、设计-做成什么样" tabindex="-1">2、设计 - 做成什么样？ <a class="header-anchor" href="#_2、设计-做成什么样" aria-label="Permalink to &quot;2、设计 - 做成什么样？&quot;">​</a></h3><p>职位：ui 设计、数据库设计</p><h3 id="_3、编码-具体实现" tabindex="-1">3、编码 - 具体实现 <a class="header-anchor" href="#_3、编码-具体实现" aria-label="Permalink to &quot;3、编码 - 具体实现&quot;">​</a></h3><p>职位：前端开发工程师（负责页面，只要用户能看得见的东西都是由前端负责）、后端开发工程师（负责数据的管理）</p><h3 id="_4、测试-测试实现效果" tabindex="-1">4、测试 - 测试实现效果 <a class="header-anchor" href="#_4、测试-测试实现效果" aria-label="Permalink to &quot;4、测试 - 测试实现效果&quot;">​</a></h3><p>职位：测试工程师（项目管理系统中，反馈 bug）、上线/实施工程师（项目部署）</p><h3 id="_5、维护-维护应用-更新版本" tabindex="-1">5、维护 - 维护应用，更新版本 <a class="header-anchor" href="#_5、维护-维护应用-更新版本" aria-label="Permalink to &quot;5、维护 - 维护应用，更新版本&quot;">​</a></h3><p>职位：运维工程师</p><h2 id="需求分析-重点介绍" tabindex="-1">需求分析（重点介绍） <a class="header-anchor" href="#需求分析-重点介绍" aria-label="Permalink to &quot;需求分析（重点介绍）&quot;">​</a></h2><h3 id="_1、分析网站的类型" tabindex="-1">1、分析网站的类型 <a class="header-anchor" href="#_1、分析网站的类型" aria-label="Permalink to &quot;1、分析网站的类型&quot;">​</a></h3><h4 id="按网站类型分类" tabindex="-1">按网站类型分类 <a class="header-anchor" href="#按网站类型分类" aria-label="Permalink to &quot;按网站类型分类&quot;">​</a></h4><ul><li><p>推广展示类：个人、产品推广、游戏、旅游等</p></li><li><p>机构企业类：联想、Dell 、政府、银行等</p></li><li><p>电子商务类：1、电商平台：淘宝、京东、苏宁易购、聚美优品 2、企业自己的商城，只卖自己的产品：oppo 商城</p></li><li><p>多媒体互动类：优酷、微博、土豆、爱奇艺、QQ 音乐、网易云音乐、快手、抖音等</p></li><li><p>综合门户类：新浪、腾讯、网易、央视网等</p></li><li><p>搜索引擎类：百度、谷歌、360、IE 等</p></li></ul><h4 id="按网站技术分类" tabindex="-1">按网站技术分类 <a class="header-anchor" href="#按网站技术分类" aria-label="Permalink to &quot;按网站技术分类&quot;">​</a></h4><ul><li><p>固定分辨率网站：新浪</p></li><li><p>响应式网站：Bootstrap、觉唯网</p></li><li><p>瀑布流式网站：花瓣网</p></li></ul><h4 id="按网站布局分类" tabindex="-1">按网站布局分类 <a class="header-anchor" href="#按网站布局分类" aria-label="Permalink to &quot;按网站布局分类&quot;">​</a></h4><ul><li>流式布局</li><li>水平方向布局</li><li>垂直方向布局</li></ul><h3 id="_2、分析用户群体" tabindex="-1">2、分析用户群体 <a class="header-anchor" href="#_2、分析用户群体" aria-label="Permalink to &quot;2、分析用户群体&quot;">​</a></h3><p>用户年龄、选择素材、网页布局、颜色搭配、用户体验及页面交互动效、功能便捷</p><h3 id="_3、市场价值与竞品分析" tabindex="-1">3、市场价值与竞品分析 <a class="header-anchor" href="#_3、市场价值与竞品分析" aria-label="Permalink to &quot;3、市场价值与竞品分析&quot;">​</a></h3><ul><li>主要业务功能是否同样满足用户</li><li>独有的特殊功能的核心竞争力</li><li>用户操作及体验度是否优化</li><li>网站性能是否更加快捷</li><li>用户对于网站的依赖程度及习惯度</li></ul><h3 id="_4、业务功能分析" tabindex="-1">4、业务功能分析 <a class="header-anchor" href="#_4、业务功能分析" aria-label="Permalink to &quot;4、业务功能分析&quot;">​</a></h3><ul><li>页面架构展示功能：网站有多少个页面。其中包含（一级页面，二级页面，三级页面），主页面与子页面的关系。</li><li>用户操作功能：每一个页面有哪些用户操作的功能，也就是产生交互的行为。</li></ul><p>例子：登录、注册、删除都为功能（用 xmind 页面结构思维导图）</p><h3 id="_5、业务流程分析" tabindex="-1">5、业务流程分析 <a class="header-anchor" href="#_5、业务流程分析" aria-label="Permalink to &quot;5、业务流程分析&quot;">​</a></h3><p>例子：电商网站购买东西，流程为：加入购物车——加入订单——支付（直接先用 xmind 演示：流程图）</p><h2 id="鉴赏网页" tabindex="-1">鉴赏网页 <a class="header-anchor" href="#鉴赏网页" aria-label="Permalink to &quot;鉴赏网页&quot;">​</a></h2><p>可以参考 ant design 的设计原则讲解：<a href="https://ant.design/docs/spec/introduce-cn" target="_blank" rel="noreferrer">https://ant.design/docs/spec/introduce-cn</a></p><h3 id="_1、网页的基础结构" tabindex="-1">1、网页的基础结构 <a class="header-anchor" href="#_1、网页的基础结构" aria-label="Permalink to &quot;1、网页的基础结构&quot;">​</a></h3><ul><li>网页头部 —— 页头、导航、搜索条等</li><li>网页内容 —— 图片、文字、操作按钮</li><li>网页尾部 —— 友情链接、版权所有等</li></ul><h3 id="_2、网页的常见布局结构" tabindex="-1">2、网页的常见布局结构 <a class="header-anchor" href="#_2、网页的常见布局结构" aria-label="Permalink to &quot;2、网页的常见布局结构&quot;">​</a></h3><ul><li>封面型</li><li>“ 国 ” 字型</li><li>拐角型</li><li>标题正文型</li><li>左右框架型</li><li>上下框架型</li><li>综合变化型</li></ul><h3 id="_3、网页制作的常用工具" tabindex="-1">3、网页制作的常用工具 <a class="header-anchor" href="#_3、网页制作的常用工具" aria-label="Permalink to &quot;3、网页制作的常用工具&quot;">​</a></h3><ul><li>xmind —— 完成业务功能、流程图</li><li>Axure RP —— 原型图制作</li><li>Photoshop —— 处理素材</li><li>WebStorm —— 编码、开发</li></ul><h2 id="xmind" tabindex="-1">xmind <a class="header-anchor" href="#xmind" aria-label="Permalink to &quot;xmind&quot;">​</a></h2><h3 id="_1、工具简介" tabindex="-1">1、工具简介 <a class="header-anchor" href="#_1、工具简介" aria-label="Permalink to &quot;1、工具简介&quot;">​</a></h3><p>xmind 工具主要是用于画思维导图的，分析网站的整个页面，以及网站的每个页面的功能有哪些，及业务流程是怎样的。</p><h3 id="_2、工具的使用" tabindex="-1">2、工具的使用 <a class="header-anchor" href="#_2、工具的使用" aria-label="Permalink to &quot;2、工具的使用&quot;">​</a></h3><p>1）、新建思维导图</p><p>2）、快捷键</p><ul><li><p><code>enter 键</code> ：创建分支</p></li><li><p>选中该分支按 <code>tab 键</code> ：创建该分支的子分支</p></li><li><p>选中小分支往外拖就可变成单独的</p></li></ul><h2 id="axure" tabindex="-1">axure <a class="header-anchor" href="#axure" aria-label="Permalink to &quot;axure&quot;">​</a></h2><h3 id="_1、axure是什么" tabindex="-1">1、axure是什么 <a class="header-anchor" href="#_1、axure是什么" aria-label="Permalink to &quot;1、axure是什么&quot;">​</a></h3><p>是一款专业的快速原型设计工具，我们主要用它来制作原型图。</p><h3 id="_2、什么是原型图" tabindex="-1">2、什么是原型图 <a class="header-anchor" href="#_2、什么是原型图" aria-label="Permalink to &quot;2、什么是原型图&quot;">​</a></h3><p>就是一款产品成型之前的一个简单的框架，就是将页面的排版布局展现出来，每个功能键的交互，使产品的初步构思有一个可视化的展示。</p><h3 id="_3、原型图的作用" tabindex="-1">3、原型图的作用 <a class="header-anchor" href="#_3、原型图的作用" aria-label="Permalink to &quot;3、原型图的作用&quot;">​</a></h3><p>当一个企业想开发一款产品时，那么绝大多数企业本身并不懂得互联网知识，与外包公司沟通清楚业务流程和需求后，其实并能想象得到自己的产品的表现形态。那么公司就可以首先制作出原型图，就可以让甲方提前看到，产品的界面样式，每个按钮的功能和效果，也可以看到产品的基本框架，和运作机制，获得比较真实的感受。等到项目确定后，ui就可以根据原型图来设计页面的布局及交互效果了。</p><h3 id="_4、常用的原图图工具" tabindex="-1">4、常用的原图图工具 <a class="header-anchor" href="#_4、常用的原图图工具" aria-label="Permalink to &quot;4、常用的原图图工具&quot;">​</a></h3><p>axure、墨刀</p>',86),h=[t];function d(n,s,p,c,u,b){return l(),e("div",null,h)}const x=a(o,[["render",d]]);export{q as __pageData,x as default};
